kind: kapeta/block-type-service:1.3.7
metadata:
  name: kapeta/everything-user
  visibility: private
  title: User for Everything
spec:
  entities:
    types:
      - type: dto
        name: User
        properties:
          email:
            type: string
            secret: false
            sensitive: false
            required: true
            global: false
            primary: false
          name:
            type: string
            secret: false
            sensitive: false
            required: true
            global: false
            primary: false
      - type: dto
        name: UserRegistration
        properties:
          email:
            type: string
            secret: false
            sensitive: false
            required: true
            global: false
            primary: false
          name:
            type: string
            secret: false
            sensitive: false
            required: true
            global: false
            primary: false
          password:
            type: string
            secret: false
            sensitive: false
            required: true
            global: false
            primary: false
      - type: dto
        name: UserAuthPassword
        properties:
          email:
            type: string
            secret: false
            sensitive: false
            required: true
            global: false
            primary: false
          password:
            type: string
            secret: false
            sensitive: false
            required: true
            global: false
            primary: false
      - type: dto
        name: Token
        properties:
          token:
            type: string
            secret: false
            sensitive: false
            required: true
            global: false
            primary: false
    source:
      type: kaplang
      version: 1.17.2
      value: |
        type User {
            email:string 
            name: string
        }

        type UserRegistration {
            email: string
            name: string 
            password:string
        }

        type UserAuthPassword {
            email: string
            password: string
        }

        type Token {
            token:string
        }
  providers:
    - kind: kapeta/resource-type-rest-api:1.6.0
      metadata:
        name: users
      spec:
        port:
          name: rest
          type: rest
        methods:
          Users::getAllUsers:
            responseType:
              ref: User[]
            method: GET
            path: /users/
            arguments: {}
            controllerName: Users
          Users::updateCurrentUser:
            responseType:
              ref: User
            method: POST
            path: /users/me
            arguments:
              user:
                ref: User
                transport: BODY
                argument: user
                optional: false
            controllerName: Users
          Users::getCurrentUser:
            responseType:
              ref: User
            method: GET
            path: /users/me
            arguments: {}
            controllerName: Users
          Users::authenticate:
            responseType:
              ref: Token
            method: POST
            path: /users/authenticate
            arguments:
              auth:
                ref: UserAuthPassword
                transport: BODY
                argument: auth
                optional: false
            controllerName: Users
          Users::registerUser:
            responseType:
              ref: Token
            method: POST
            path: /users/register
            arguments:
              payload:
                ref: UserRegistration
                transport: BODY
                argument: payload
                optional: false
            controllerName: Users
        source:
          type: kaplang
          version: 1.17.2
          value: |-
            controller Users('/users') {

                @POST('/register')
                registerUser( @Body payload:UserRegistration ):Token

                @POST("/authenticate")
                authenticate( @Body auth:UserAuthPassword):Token

                @GET("/me")
                getCurrentUser():User

                @POST("/me")
                updateCurrentUser(@Body user:User):User

                @GET("/")
                getAllUsers(): User[]
            }
    - kind: kapeta/resource-type-auth-jwt-provider:1.1.0
      metadata:
        name: authjwtprovider
      spec:
        port:
          name: http
          type: http
  consumers:
    - kind: kapeta/resource-type-postgresql:1.0.2
      metadata:
        name: users
      spec:
        port:
          type: postgres
        models:
          - name: User
            properties:
              id:
                type: string
                secret: false
                sensitive: false
                required: true
                global: false
                primary: true
              email:
                type: string
                secret: false
                sensitive: false
                required: true
                global: false
                primary: false
              name:
                type: string
                secret: false
                sensitive: false
                required: true
                global: false
                primary: false
              password:
                type: string
                secret: false
                sensitive: false
                required: true
                global: false
                primary: false
        source:
          type: kaplang
          version: 1.17.1
          value: |-
            type User {
                @Id
                id: string
                email: string
                name: string
                password: string
            }
  target:
    kind: kapeta/language-target-java-spring-boot:1.7.3
    options:
      basePackage: com.kapeta.everything
      groupId: com.kapeta.everything
      artifactId: user-system
  configuration:
    types:
      - type: dto
        name: Features
        properties:
          selfRegistrationEnabled:
            type: boolean
            defaultValue: "true"
            secret: false
            sensitive: false
            required: true
            global: false
            primary: false
    source:
      type: kaplang
      version: 1.17.2
      value: |-
        type Features {
            selfRegistrationEnabled:boolean = true
        }
